<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\UVBuild\KL27Chainsaw.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\UVBuild\KL27Chainsaw.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Sat Nov 26 16:19:28 2016
<BR><P>
<H3>Maximum Stack Usage =        336 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
TPM0_IRQHandler &rArr; controllers_forgeneration_custom &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[7]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">NMI_Handler</a><BR>
 <LI><a href="#[8]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">HardFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">PendSV_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1b]">ADC0_IRQHandler</a> from events.o(i.ADC0_IRQHandler) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[1c]">CMP0_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[c]">DMA0_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[d]">DMA1_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[e]">DMA2_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[f]">DMA3_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[4]">DefaultISR</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(.text)
 <LI><a href="#[11]">FTFA_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[8]">HardFault_Handler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[14]">I2C0_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[15]">I2C1_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[13]">LLWU_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[28]">LPTMR0_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[18]">LPUART0_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[19]">LPUART1_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[7]">NMI_Handler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[22]">PIT_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[12]">PMC_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[2a]">PORTA_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[2b]">PORTBCDE_IRQHandler</a> from events.o(i.PORTBCDE_IRQHandler) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[20]">RTC_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[21]">RTC_Seconds_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[10]">Reserved20_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[23]">Reserved39_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[25]">Reserved41_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[26]">Reserved42_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[27]">Reserved43_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[29]">Reserved45_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[6]">Reset_Handler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[16]">SPI0_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[17]">SPI1_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from osa1.o(i.SysTick_Handler) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[1]">SystemInit</a> from system_mkl27z644.o(i.SystemInit) referenced from startup_mkl27z644.o(.text)
 <LI><a href="#[1d]">TPM0_IRQHandler</a> from events.o(i.TPM0_IRQHandler) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[1e]">TPM1_IRQHandler</a> from events.o(i.TPM1_IRQHandler) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[1f]">TPM2_IRQHandler</a> from events.o(i.TPM2_IRQHandler) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[1a]">UART2_FLEXIO_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[24]">USB0_IRQHandler</a> from startup_mkl27z644.o(.text) referenced from startup_mkl27z644.o(RESET)
 <LI><a href="#[3]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mkl27z644.o(.text)
 <LI><a href="#[5]">fputc</a> from fsl_debug_console.o(i.fputc) referenced from printf3.o(i.__0printf$3)
 <LI><a href="#[2]">init_data_bss</a> from startup.o(i.init_data_bss) referenced from startup_mkl27z644.o(.text)
 <LI><a href="#[0]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(.text)
</UL>
<P><STRONG><a name="[99]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry4.o(.ARM.Collect$$$$00000003))

<P><STRONG><a name="[2c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[9a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[9b]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[9c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[9d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[9e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[6]"></a>Reset_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(.text)
</UL>
<P><STRONG><a name="[11]"></a>FTFA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>LLWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>LPTMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>LPUART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>Reserved39_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>Reserved41_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>Reserved42_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>Reserved43_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>Reserved45_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>UART2_FLEXIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl27z644.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_GetCoreClockFreq
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_PwmStart
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_GetClock
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSA_TimeInit
</UL>

<P><STRONG><a name="[a0]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controllers_forgeneration_custom
</UL>

<P><STRONG><a name="[a1]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[a2]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controllers_forgeneration_initialize
</UL>

<P><STRONG><a name="[a4]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controllers_forgeneration_custom
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controllers_forgeneration_custom
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controllers_forgeneration_custom
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controllers_forgeneration_custom
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_d2iz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controllers_forgeneration_custom
</UL>

<P><STRONG><a name="[8a]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controllers_forgeneration_custom
</UL>

<P><STRONG><a name="[8b]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controllers_forgeneration_custom
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controllers_forgeneration_custom
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[a5]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[a6]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[a7]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[36]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2d]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[a9]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1b]"></a>ADC0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, events.o(i.ADC0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>ADC16_DRV_ConfigConvChn</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, fsl_adc16_driver.o(i.ADC16_DRV_ConfigConvChn))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ADC16_DRV_ConfigConvChn &rArr; ADC16_HAL_ConfigChn &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC16_HAL_ConfigChn
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Components_Init
</UL>

<P><STRONG><a name="[41]"></a>ADC16_DRV_Init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, fsl_adc16_driver.o(i.ADC16_DRV_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ADC16_DRV_Init &rArr; CLOCK_SYS_EnableAdcClock &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_EnableAdcClock
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC16_HAL_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC16_HAL_ConfigConverter
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_SYS_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Components_Init
</UL>

<P><STRONG><a name="[40]"></a>ADC16_HAL_ConfigChn</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, fsl_adc16_hal.o(i.ADC16_HAL_ConfigChn))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ADC16_HAL_ConfigChn &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC16_DRV_ConfigConvChn
</UL>

<P><STRONG><a name="[44]"></a>ADC16_HAL_ConfigConverter</STRONG> (Thumb, 166 bytes, Stack size 20 bytes, fsl_adc16_hal.o(i.ADC16_HAL_ConfigConverter))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC16_HAL_ConfigConverter
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC16_DRV_Init
</UL>

<P><STRONG><a name="[43]"></a>ADC16_HAL_Init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fsl_adc16_hal.o(i.ADC16_HAL_Init))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC16_DRV_Init
</UL>

<P><STRONG><a name="[46]"></a>CLOCK_HAL_GetInternalRefClk</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, fsl_mcglite_hal.o(i.CLOCK_HAL_GetInternalRefClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CLOCK_HAL_GetInternalRefClk &rArr; CLOCK_HAL_GetLircClk
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_HAL_GetLircClk
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_GetTpmFreq
</UL>

<P><STRONG><a name="[47]"></a>CLOCK_HAL_GetLircClk</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, fsl_mcglite_hal.o(i.CLOCK_HAL_GetLircClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_HAL_GetLircClk
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_HAL_GetClkSrcStat
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_HAL_GetOutClk
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_HAL_GetInternalRefClk
</UL>

<P><STRONG><a name="[49]"></a>CLOCK_HAL_GetOutClk</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, fsl_mcglite_hal.o(i.CLOCK_HAL_GetOutClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CLOCK_HAL_GetOutClk &rArr; CLOCK_HAL_GetLircClk
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_HAL_GetLircClk
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_HAL_GetClkSrcStat
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_GetCoreClockFreq
</UL>

<P><STRONG><a name="[42]"></a>CLOCK_SYS_EnableAdcClock</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, fsl_clock_mkl27z644.o(i.CLOCK_SYS_EnableAdcClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CLOCK_SYS_EnableAdcClock &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_HAL_EnableClock
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC16_DRV_Init
</UL>

<P><STRONG><a name="[4b]"></a>CLOCK_SYS_EnablePortClock</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, fsl_clock_mkl27z644.o(i.CLOCK_SYS_EnablePortClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CLOCK_SYS_EnablePortClock &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_HAL_EnableClock
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DRV_OutputPinInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DRV_InputPinInit
</UL>

<P><STRONG><a name="[4c]"></a>CLOCK_SYS_EnableTpmClock</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, fsl_clock_mkl27z644.o(i.CLOCK_SYS_EnableTpmClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CLOCK_SYS_EnableTpmClock &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_HAL_EnableClock
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_Init
</UL>

<P><STRONG><a name="[4d]"></a>CLOCK_SYS_GetCoreClockFreq</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, fsl_clock_mkl27z644.o(i.CLOCK_SYS_GetCoreClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CLOCK_SYS_GetCoreClockFreq &rArr; CLOCK_HAL_GetOutClk &rArr; CLOCK_HAL_GetLircClk
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_HAL_GetOutClk
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_HAL_GetOutDiv1
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_GetSystickFreq
</UL>

<P><STRONG><a name="[54]"></a>CLOCK_SYS_GetOsc0ExternalRefClockFreq</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, fsl_clock_mkl27z644.o(i.CLOCK_SYS_GetOsc0ExternalRefClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_GetTpmFreq
</UL>

<P><STRONG><a name="[50]"></a>CLOCK_SYS_GetSystickFreq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, fsl_clock_manager.o(i.CLOCK_SYS_GetSystickFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CLOCK_SYS_GetSystickFreq &rArr; CLOCK_SYS_GetCoreClockFreq &rArr; CLOCK_HAL_GetOutClk &rArr; CLOCK_HAL_GetLircClk
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_GetCoreClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSA_TimeInit
</UL>

<P><STRONG><a name="[51]"></a>CLOCK_SYS_GetTpmExternalFreq</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, fsl_clock_mkl27z644.o(i.CLOCK_SYS_GetTpmExternalFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CLOCK_SYS_GetTpmExternalFreq &rArr; SIM_HAL_GetTpmExternalClkPinSelMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_HAL_GetTpmExternalClkPinSelMode
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_GetClock
</UL>

<P><STRONG><a name="[53]"></a>CLOCK_SYS_GetTpmFreq</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, fsl_clock_mkl27z644.o(i.CLOCK_SYS_GetTpmFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CLOCK_SYS_GetTpmFreq &rArr; CLOCK_HAL_GetInternalRefClk &rArr; CLOCK_HAL_GetLircClk
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_HAL_GetInternalRefClk
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_GetOsc0ExternalRefClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_GetClock
</UL>

<P><STRONG><a name="[6d]"></a>Common_Init</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, cpu.o(i.Common_Init))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PEX_components_init
</UL>

<P><STRONG><a name="[55]"></a>Components_Init</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, cpu.o(i.Components_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Components_Init &rArr; TPM_DRV_PwmStart &rArr; TPM_DRV_GetClock &rArr; CLOCK_SYS_GetTpmExternalFreq &rArr; SIM_HAL_GetTpmExternalClkPinSelMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_SetClock
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_PwmStart
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_InputCaptureEnable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_Init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_CounterStart
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DRV_Init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC16_DRV_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC16_DRV_ConfigConvChn
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PEX_components_init
</UL>

<P><STRONG><a name="[74]"></a>GPIOA_Init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gpioa_init.o(i.GPIOA_Init))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripherals_Init
</UL>

<P><STRONG><a name="[75]"></a>GPIOB_Init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gpiob_init.o(i.GPIOB_Init))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripherals_Init
</UL>

<P><STRONG><a name="[5c]"></a>GPIO_DRV_Init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, fsl_gpio_driver.o(i.GPIO_DRV_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GPIO_DRV_Init &rArr; GPIO_DRV_OutputPinInit &rArr; GPIO_HAL_WritePinOutput &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DRV_OutputPinInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DRV_InputPinInit
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Components_Init
</UL>

<P><STRONG><a name="[5d]"></a>GPIO_DRV_InputPinInit</STRONG> (Thumb, 278 bytes, Stack size 40 bytes, fsl_gpio_driver.o(i.GPIO_DRV_InputPinInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GPIO_DRV_InputPinInit &rArr; GPIO_HAL_SetPinDir &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_EnablePortClock
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_HAL_SetPinDir
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetMuxMode
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_SYS_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DRV_Init
</UL>

<P><STRONG><a name="[5e]"></a>GPIO_DRV_OutputPinInit</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, fsl_gpio_driver.o(i.GPIO_DRV_OutputPinInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GPIO_DRV_OutputPinInit &rArr; GPIO_HAL_WritePinOutput &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_EnablePortClock
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_HAL_WritePinOutput
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_HAL_SetPinDir
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetMuxMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DRV_Init
</UL>

<P><STRONG><a name="[60]"></a>GPIO_HAL_SetPinDir</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, fsl_gpio_hal.o(i.GPIO_HAL_SetPinDir))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPIO_HAL_SetPinDir &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DRV_OutputPinInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DRV_InputPinInit
</UL>

<P><STRONG><a name="[62]"></a>GPIO_HAL_WritePinOutput</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, fsl_gpio_hal.o(i.GPIO_HAL_WritePinOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPIO_HAL_WritePinOutput &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DRV_OutputPinInit
</UL>

<P><STRONG><a name="[67]"></a>OSA_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fsl_os_abstraction_bm.o(i.OSA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OSA_Init &rArr; OSA_TimeInit &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSA_TimeInit
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_init
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PE_low_level_init
</UL>

<P><STRONG><a name="[69]"></a>OSA_TimeInit</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, osa1.o(i.OSA_TimeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OSA_TimeInit &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_GetSystickFreq
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSA_Init
</UL>

<P><STRONG><a name="[6c]"></a>PEX_components_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pe_low_level_init.o(i.PEX_components_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = PEX_components_init &rArr; Components_Init &rArr; TPM_DRV_PwmStart &rArr; TPM_DRV_GetClock &rArr; CLOCK_SYS_GetTpmExternalFreq &rArr; SIM_HAL_GetTpmExternalClkPinSelMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Peripherals_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Components_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Common_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PE_low_level_init
</UL>

<P><STRONG><a name="[6f]"></a>PE_low_level_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pe_low_level_init.o(i.PE_low_level_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = PE_low_level_init &rArr; PEX_components_init &rArr; Components_Init &rArr; TPM_DRV_PwmStart &rArr; TPM_DRV_GetClock &rArr; CLOCK_SYS_GetTpmExternalFreq &rArr; SIM_HAL_GetTpmExternalClkPinSelMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSA_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PEX_components_init
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2b]"></a>PORTBCDE_IRQHandler</STRONG> (Thumb, 276 bytes, Stack size 8 bytes, events.o(i.PORTBCDE_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = PORTBCDE_IRQHandler &rArr; GPIO_HAL_SetPinOutput &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_HAL_SetPinOutput
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_HAL_ClearPinOutput
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>Peripherals_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, peripherals_init.o(i.Peripherals_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Peripherals_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PEX_components_init
</UL>

<P><STRONG><a name="[52]"></a>SIM_HAL_GetTpmExternalClkPinSelMode</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, fsl_sim_hal_mkl27z644.o(i.SIM_HAL_GetTpmExternalClkPinSelMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SIM_HAL_GetTpmExternalClkPinSelMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_GetTpmExternalFreq
</UL>

<P><STRONG><a name="[76]"></a>SIM_HAL_SetTpmChSrcMode</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, fsl_sim_hal_mkl27z644.o(i.SIM_HAL_SetTpmChSrcMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SIM_HAL_SetTpmChSrcMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_tpm_pins
</UL>

<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, osa1.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>SystemInit</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, system_mkl27z644.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(.text)
</UL>
<P><STRONG><a name="[1d]"></a>TPM0_IRQHandler</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, events.o(i.TPM0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = TPM0_IRQHandler &rArr; controllers_forgeneration_custom &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controllers_forgeneration_custom
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_IRQHandler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_HAL_TogglePinOutput
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TPM1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, events.o(i.TPM1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TPM1_IRQHandler &rArr; TPM_DRV_IRQHandler &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TPM2_IRQHandler</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, events.o(i.TPM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TPM2_IRQHandler &rArr; TPM_DRV_IRQHandler &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_IRQHandler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_HAL_TogglePinOutput
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TPM_DRV_CounterStart</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, fsl_tpm_driver.o(i.TPM_DRV_CounterStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TPM_DRV_CounterStart &rArr; TPM_HAL_DisableChn &rArr; TPM_HAL_SetChnMsnbaElsnbaVal &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetClockMode
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_DisableChn
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_SetTimeOverflowIntCmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetMod
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetCpwms
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Components_Init
</UL>

<P><STRONG><a name="[7e]"></a>TPM_DRV_GetClock</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, fsl_tpm_driver.o(i.TPM_DRV_GetClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TPM_DRV_GetClock &rArr; CLOCK_SYS_GetTpmExternalFreq &rArr; SIM_HAL_GetTpmExternalClkPinSelMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_GetTpmFreq
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_GetTpmExternalFreq
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_PwmStart
</UL>

<P><STRONG><a name="[77]"></a>TPM_DRV_IRQHandler</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, fsl_tpm_driver.o(i.TPM_DRV_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TPM_DRV_IRQHandler &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM2_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM1_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
</UL>

<P><STRONG><a name="[57]"></a>TPM_DRV_Init</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, fsl_tpm_driver.o(i.TPM_DRV_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TPM_DRV_Init &rArr; CLOCK_SYS_EnableTpmClock &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_EnableTpmClock
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_Reset
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_SYS_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Components_Init
</UL>

<P><STRONG><a name="[5b]"></a>TPM_DRV_InputCaptureEnable</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, fsl_tpm_driver.o(i.TPM_DRV_InputCaptureEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TPM_DRV_InputCaptureEnable &rArr; TPM_HAL_DisableChn &rArr; TPM_HAL_SetChnMsnbaElsnbaVal &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetClockMode
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_DisableChn
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_SetChnIntCmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetMod
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetCpwms
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetChnMsnbaElsnbaVal
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_ClearCounter
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_ClearChnInt
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Components_Init
</UL>

<P><STRONG><a name="[5a]"></a>TPM_DRV_PwmStart</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, fsl_tpm_driver.o(i.TPM_DRV_PwmStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = TPM_DRV_PwmStart &rArr; TPM_DRV_GetClock &rArr; CLOCK_SYS_GetTpmExternalFreq &rArr; SIM_HAL_GetTpmExternalClkPinSelMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetClockMode
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_EnablePwmMode
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_DisableChn
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_GetClock
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetMod
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetChnCountVal
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Components_Init
</UL>

<P><STRONG><a name="[83]"></a>TPM_DRV_SetChnIntCmd</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, fsl_tpm_driver.o(i.TPM_DRV_SetChnIntCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TPM_DRV_SetChnIntCmd &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_InputCaptureEnable
</UL>

<P><STRONG><a name="[58]"></a>TPM_DRV_SetClock</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, fsl_tpm_driver.o(i.TPM_DRV_SetClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TPM_DRV_SetClock &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Components_Init
</UL>

<P><STRONG><a name="[7d]"></a>TPM_DRV_SetTimeOverflowIntCmd</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, fsl_tpm_driver.o(i.TPM_DRV_SetTimeOverflowIntCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TPM_DRV_SetTimeOverflowIntCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_CounterStart
</UL>

<P><STRONG><a name="[7b]"></a>TPM_HAL_DisableChn</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fsl_tpm_hal.o(i.TPM_HAL_DisableChn))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TPM_HAL_DisableChn &rArr; TPM_HAL_SetChnMsnbaElsnbaVal &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetChnMsnbaElsnbaVal
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_PwmStart
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_InputCaptureEnable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_CounterStart
</UL>

<P><STRONG><a name="[85]"></a>TPM_HAL_EnablePwmMode</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, fsl_tpm_hal.o(i.TPM_HAL_EnablePwmMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TPM_HAL_EnablePwmMode &rArr; TPM_HAL_SetChnMsnbaElsnbaVal &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetChnMsnbaElsnbaVal
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetClockMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_PwmStart
</UL>

<P><STRONG><a name="[7f]"></a>TPM_HAL_Reset</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, fsl_tpm_hal.o(i.TPM_HAL_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TPM_HAL_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_Init
</UL>

<P><STRONG><a name="[79]"></a>TPM_HAL_SetClockMode</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, fsl_tpm_hal.o(i.TPM_HAL_SetClockMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TPM_HAL_SetClockMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_PwmStart
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_InputCaptureEnable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_CounterStart
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_EnablePwmMode
</UL>

<P><STRONG><a name="[87]"></a>__0printf$3</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[aa]"></a>__1printf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)

<P><STRONG><a name="[89]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[3c]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[6a]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, osa1.o(i.__ARM_common_ll_muluu))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSA_TimeInit
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_assert</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, fsl_misc_utilities.o(i.__aeabi_assert))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_HAL_GetTpmExternalClkPinSelMode
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_EnableTpmClock
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_EnablePortClock
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_EnableAdcClock
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_IRQHandler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_HAL_TogglePinOutput
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_HAL_SetPinOutput
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_HAL_ClearPinOutput
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_SetClock
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_PwmStart
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_InputCaptureEnable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_Init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_CounterStart
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC16_DRV_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC16_DRV_ConfigConvChn
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_HAL_WritePinOutput
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_HAL_SetPinDir
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetPullMode
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetPullCmd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetMuxMode
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSA_TimeInit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_HAL_SetTpmChSrcMode
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC16_HAL_ConfigChn
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_SYS_EnableIRQ
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DRV_OutputPinInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DRV_InputPinInit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetMuxMode
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_SYS_EnableIRQ
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetChnMsnbaElsnbaVal
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_EnablePwmMode
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_SetChnIntCmd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_GetClock
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetCpwms
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetChnMsnbaElsnbaVal
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_SetChnCountVal
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_ClearChnInt
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT_SYS_EnableIRQ
</UL>

<P><STRONG><a name="[ab]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[ac]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[ad]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[78]"></a>controllers_forgeneration_custom</STRONG> (Thumb, 2958 bytes, Stack size 176 bytes, controllers_forgeneration.o(i.controllers_forgeneration_custom))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = controllers_forgeneration_custom &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
</UL>

<P><STRONG><a name="[8e]"></a>controllers_forgeneration_initialize</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, controllers_forgeneration.o(i.controllers_forgeneration_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = controllers_forgeneration_initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fsl_debug_console.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0printf$3)
</UL>
<P><STRONG><a name="[70]"></a>hardware_init</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, hardware_init.o(i.hardware_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hardware_init &rArr; init_tpm_pins &rArr; SIM_HAL_SetTpmChSrcMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_tpm_pins
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_rtc_pins
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_rcm_pins
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_osc_pins
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_llwu_pins
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_gpio_pins
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_coredebug_pins
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_adc_pins
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_HAL_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PE_low_level_init
</UL>

<P><STRONG><a name="[91]"></a>init_adc_pins</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, pin_init.o(i.init_adc_pins))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = init_adc_pins &rArr; PORT_HAL_SetMuxMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetMuxMode
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[92]"></a>init_coredebug_pins</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, pin_init.o(i.init_coredebug_pins))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = init_coredebug_pins &rArr; PORT_HAL_SetMuxMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetMuxMode
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[2]"></a>init_data_bss</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, startup.o(i.init_data_bss))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl27z644.o(.text)
</UL>
<P><STRONG><a name="[93]"></a>init_gpio_pins</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, pin_init.o(i.init_gpio_pins))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = init_gpio_pins &rArr; PORT_HAL_SetPullMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetPullMode
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetPullCmd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetMuxMode
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[94]"></a>init_llwu_pins</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, pin_init.o(i.init_llwu_pins))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = init_llwu_pins &rArr; PORT_HAL_SetPullMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetPullMode
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetPullCmd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetMuxMode
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[95]"></a>init_osc_pins</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, pin_init.o(i.init_osc_pins))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = init_osc_pins &rArr; PORT_HAL_SetMuxMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetMuxMode
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[96]"></a>init_rcm_pins</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pin_init.o(i.init_rcm_pins))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = init_rcm_pins &rArr; PORT_HAL_SetMuxMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetMuxMode
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[97]"></a>init_rtc_pins</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, pin_init.o(i.init_rtc_pins))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = init_rtc_pins &rArr; PORT_HAL_SetPullMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetPullMode
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetPullCmd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetMuxMode
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[98]"></a>init_tpm_pins</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, pin_init.o(i.init_tpm_pins))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = init_tpm_pins &rArr; SIM_HAL_SetTpmChSrcMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_HAL_SetMuxMode
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_HAL_SetTpmChSrcMode
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[0]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = main &rArr; PE_low_level_init &rArr; PEX_components_init &rArr; Components_Init &rArr; TPM_DRV_PwmStart &rArr; TPM_DRV_GetClock &rArr; CLOCK_SYS_GetTpmExternalFreq &rArr; SIM_HAL_GetTpmExternalClkPinSelMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PE_low_level_init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controllers_forgeneration_initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[68]"></a>task_init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, fsl_os_abstraction_bm.o(i.task_init))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSA_Init
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[56]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, cpu.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Components_Init
</UL>

<P><STRONG><a name="[63]"></a>GPIO_HAL_ClearPinOutput</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, events.o(i.GPIO_HAL_ClearPinOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPIO_HAL_ClearPinOutput &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTBCDE_IRQHandler
</UL>

<P><STRONG><a name="[64]"></a>GPIO_HAL_SetPinOutput</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, events.o(i.GPIO_HAL_SetPinOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPIO_HAL_SetPinOutput &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTBCDE_IRQHandler
</UL>

<P><STRONG><a name="[65]"></a>GPIO_HAL_TogglePinOutput</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, events.o(i.GPIO_HAL_TogglePinOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPIO_HAL_TogglePinOutput &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM2_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
</UL>

<P><STRONG><a name="[4e]"></a>CLOCK_HAL_GetOutDiv1</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fsl_clock_mkl27z644.o(i.CLOCK_HAL_GetOutDiv1))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_GetCoreClockFreq
</UL>

<P><STRONG><a name="[4a]"></a>SIM_HAL_EnableClock</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, fsl_clock_mkl27z644.o(i.SIM_HAL_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SIM_HAL_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_EnableTpmClock
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_EnablePortClock
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SYS_EnableAdcClock
</UL>

<P><STRONG><a name="[48]"></a>CLOCK_HAL_GetClkSrcStat</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_mcglite_hal.o(i.CLOCK_HAL_GetClkSrcStat))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_HAL_GetOutClk
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_HAL_GetLircClk
</UL>

<P><STRONG><a name="[90]"></a>SIM_HAL_EnableClock</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, hardware_init.o(i.SIM_HAL_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SIM_HAL_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hardware_init
</UL>

<P><STRONG><a name="[6b]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, osa1.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSA_TimeInit
</UL>

<P><STRONG><a name="[71]"></a>PORT_HAL_SetMuxMode</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, pin_init.o(i.PORT_HAL_SetMuxMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PORT_HAL_SetMuxMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_tpm_pins
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_rtc_pins
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_rcm_pins
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_osc_pins
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_llwu_pins
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_gpio_pins
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_coredebug_pins
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_adc_pins
</UL>

<P><STRONG><a name="[72]"></a>PORT_HAL_SetPullCmd</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, pin_init.o(i.PORT_HAL_SetPullCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PORT_HAL_SetPullCmd &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_rtc_pins
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_llwu_pins
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_gpio_pins
</UL>

<P><STRONG><a name="[73]"></a>PORT_HAL_SetPullMode</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, pin_init.o(i.PORT_HAL_SetPullMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PORT_HAL_SetPullMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_rtc_pins
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_llwu_pins
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_gpio_pins
</UL>

<P><STRONG><a name="[66]"></a>INT_SYS_EnableIRQ</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, fsl_tpm_driver.o(i.INT_SYS_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = INT_SYS_EnableIRQ &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_Init
</UL>

<P><STRONG><a name="[80]"></a>TPM_HAL_ClearChnInt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, fsl_tpm_driver.o(i.TPM_HAL_ClearChnInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TPM_HAL_ClearChnInt &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_InputCaptureEnable
</UL>

<P><STRONG><a name="[81]"></a>TPM_HAL_ClearCounter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fsl_tpm_driver.o(i.TPM_HAL_ClearCounter))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_InputCaptureEnable
</UL>

<P><STRONG><a name="[84]"></a>TPM_HAL_SetChnCountVal</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, fsl_tpm_driver.o(i.TPM_HAL_SetChnCountVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TPM_HAL_SetChnCountVal &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_PwmStart
</UL>

<P><STRONG><a name="[82]"></a>TPM_HAL_SetChnMsnbaElsnbaVal</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, fsl_tpm_driver.o(i.TPM_HAL_SetChnMsnbaElsnbaVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TPM_HAL_SetChnMsnbaElsnbaVal &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_InputCaptureEnable
</UL>

<P><STRONG><a name="[7c]"></a>TPM_HAL_SetCpwms</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, fsl_tpm_driver.o(i.TPM_HAL_SetCpwms))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TPM_HAL_SetCpwms &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_InputCaptureEnable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_CounterStart
</UL>

<P><STRONG><a name="[7a]"></a>TPM_HAL_SetMod</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fsl_tpm_driver.o(i.TPM_HAL_SetMod))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TPM_HAL_SetMod
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_PwmStart
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_InputCaptureEnable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_DRV_CounterStart
</UL>

<P><STRONG><a name="[86]"></a>TPM_HAL_SetChnMsnbaElsnbaVal</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, fsl_tpm_hal.o(i.TPM_HAL_SetChnMsnbaElsnbaVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TPM_HAL_SetChnMsnbaElsnbaVal &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_EnablePwmMode
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM_HAL_DisableChn
</UL>

<P><STRONG><a name="[61]"></a>INT_SYS_EnableIRQ</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, fsl_gpio_driver.o(i.INT_SYS_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = INT_SYS_EnableIRQ &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DRV_InputPinInit
</UL>

<P><STRONG><a name="[5f]"></a>PORT_HAL_SetMuxMode</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, fsl_gpio_driver.o(i.PORT_HAL_SetMuxMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PORT_HAL_SetMuxMode &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DRV_OutputPinInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DRV_InputPinInit
</UL>

<P><STRONG><a name="[45]"></a>INT_SYS_EnableIRQ</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, fsl_adc16_driver.o(i.INT_SYS_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = INT_SYS_EnableIRQ &rArr; __aeabi_assert &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC16_DRV_Init
</UL>

<P><STRONG><a name="[88]"></a>_printf_core</STRONG> (Thumb, 456 bytes, Stack size 88 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$3
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
